{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: Full node entity.
 *   - id: The node ID.
 *   - bundle: The type of the node, for example, "page" or "article".
 *   - authorid: The user ID of the node author.
 *   - createdtime: Time the node was published formatted in Unix timestamp.
 *   - changedtime: Time the node was changed formatted in Unix timestamp.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{% set figure_attributes = create_attribute() %}
{% set content_attributes = create_attribute() %}
{% set meta_attributes = create_attribute() %}
{% set link_attributes = create_attribute() %}
{% set text_attributes = create_attribute() %}
{% set secondlinkwrapper_attributes = create_attribute() %}
{% set secondlink_attributes = create_attribute() %}
{%
  set classes = [
    'node',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
    'ubc-card',
    'relative',
    'h-full',
    'hover--cursor-pointer',
    'flex',
    'flex-col',
    'h-full',
    'shadow',
    'hover--shadow-lg',
    'group',
    'isolate',
  ]
%}
{%
  set figure_classes = [
    'img-cover',
    'ubc-card__media',
    'mt-0',
    'flex-none',
  ]
%}
{%
  set content_classes = [
    'p-8',
    'ubc-card__content',
    'first-child--mt-0',
  ]
%}
{%
  set meta_classes = [
    'text-sm',
    'text-grey-600',
    'mt-0',
  ]
%}
{%
  set title_classes = [
    'text-xl',
    'mt-0',
  ]
%}
{%
  set link_classes = [
    'no-underline',
    'hover--no-underline',
    'text-ubc-blue',
    'link-expand',
  ]
%}
{%
  set text_classes = [
    '',
  ]
%}
{%
  set second_link_wrapper_classes = [
    'mt-auto',
    'px-8',
    'pb-8',
    'w-full',
  ]
%}
{%
  set second_link_classes = [
    'unit-button',
    'group-hover--bg-ubc-blue-sea',
  ]
%}
{# need to put content into variable for striptags to work #}
{% set tagless_body %}
  {{ content.body }}
{% endset %}

{# addresses certain special characters being stripped out or replaced in external URLs #}
{% if not (node.field_announcement_external_link.isEmpty == true) and content.field_announcement_external_link is defined %}
  {% set exturl = content.field_announcement_external_link[0]['#url']|raw  %}
  {% set exttitle = content.field_announcement_external_link[0]['#title']|raw %}
  {% set link_url = exturl %}
  {% set link_target = '_blank' %}
  {% if exttitle == exturl %}
    {% set link_title = 'Learn more' %}
  {% else %}
    {% set link_title = exttitle %}
  {% endif %}
{% else %}
  {% set link_url = url %}
  {% set link_title = 'Learn more' %}
  {% set link_target = '_self' %}
{% endif %}

<article{{ attributes.addClass(classes) }} >
  {% if not (node.field_announcement_feature_image.isEmpty == true) and content.field_announcement_feature_image is defined %}
  <figure{{ figure_attributes.addClass(figure_classes) }}>{{ content.field_announcement_feature_image.0 }}
  </figure>
  {% endif %}
  <div{{ content_attributes.addClass(content_classes) }}>
    <div{{ meta_attributes.addClass(meta_classes) }}>
      {{ node.createdtime|format_date('date_readable') }}</div>
    <h3{{ title_attributes.addClass(title_classes) }}><a{{ link_attributes.addClass(link_classes).setAttribute('target', link_target) }} class="link-expand" href="{{ link_url }}" rel="bookmark">{{ label }}</a></h3>
    <p{{text_attributes.addClass(text_classes)}}>{{ tagless_body|striptags }}</p>
  </div>

  <p{{ secondlinkwrapper_attributes.addClass(second_link_wrapper_classes) }}><a{{ secondlink_attributes.addClass(second_link_classes).setAttribute('target', link_target) }} href="{{ link_url }}" aria-label="Article details">{{ link_title }}</a></p>
</article>
